{{=<% %>=}}
name: GitOps

###
# GitOps - automatic infrastructure management GitHub Action
#
# See https://github.com/microsoft/NubesGen/blob/main/docs/gitops-overview.md
# for more information about using GitOps with NubesGen.
###

on:
  push:
    branches:
      - 'env-*'
<%#runtimeDotnet%>

env:
  DOTNET_VERSION: '3.1'
  APP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
<%/runtimeDotnet%>
<%#runtimeNodejs%>

env:
  NODEJS_VERSION: '14'
  APP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
<%/runtimeNodejs%>

jobs:
<%#runtimeDocker%>
  build-and-deploy:
<%/runtimeDocker%>
<%^runtimeDocker%>
  manage-infrastructure:
<%/runtimeDocker%>
    runs-on: ubuntu-20.04
    steps:
<%#iacToolTerraform%>
      - name: Apply Terraform configuration
        uses: microsoft/nubesgen-actions/gitops-apply-terraform@v0.4.0
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
          tf_storage_account: ${{ secrets.TF_STORAGE_ACCOUNT }}
<%/iacToolTerraform%>
<%#iacToolBicep%>
      - name: Apply Bicep configuration
        uses: microsoft/nubesgen-actions/gitops-apply-bicep@v0.3.0
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
          project_name: '{{applicationName}}'
          deployment_region: '{{region}}'
<%/iacToolBicep%>
<%#runtimeDocker%>
  <%#applicationTypeAppService%>
    <%#runtimeSpring%>
      - name: Build and deploy a Docker image of a Spring Boot project
        uses: microsoft/nubesgen-actions/gitops-build-and-deploy-to-app-service-docker-spring@v0.4.0
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
    <%/runtimeSpring%>
    <%#runtimeQuarkus%>
      - name: Build and deploy a Docker image of a Quarkus native project
        uses: microsoft/nubesgen-actions/gitops-build-and-deploy-to-app-service-docker-quarkus-native@v0.4.0
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
    <%/runtimeQuarkus%>
    <%#runtimeDefault%>
      - name: Build and deploy a Docker image
        uses: microsoft/nubesgen-actions/gitops-build-and-deploy-to-app-service-docker@v0.4.0
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
    <%/runtimeDefault%>
  <%/applicationTypeAppService%>
<%/runtimeDocker%>
<%#runtimeJava%>
  <%#applicationTypeAppService%>
  build:
    runs-on: ubuntu-20.04
    steps:
    <%#runtimeMaven%>
      - name: Build a Java project using Maven
        uses: microsoft/nubesgen-actions/gitops-build-java-maven@v0.4.0
      <%#runtimeQuarkus%>
        with:
          build_command: mvn package -Pprod,azure -Dquarkus.package.type=uber-jar
          package_path: ${{ github.workspace }}/target/*.[j,w]ar
      <%/runtimeQuarkus%>
    <%/runtimeMaven%>
    <%#runtimeGradle%>
      - name: Build a Java project using Gradle
        uses: microsoft/nubesgen-actions/gitops-build-java-gradle@v0.4.0
      <%#runtimeQuarkus%>
        with:
          build_command: gradle quarkusBuild -Dquarkus.package.type=uber-jar
          package_path: ${{ github.workspace }}/build/libs/*-runner.jar
      <%/runtimeQuarkus%>
    <%/runtimeGradle%>
  deploy:
    needs: [manage-infrastructure, build]
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy a Java application to Azure App Service
        uses: microsoft/nubesgen-actions/gitops-deploy-to-app-service-java@v0.4.0
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
  <%/applicationTypeAppService%>
  <%#applicationTypeFunction%>
  build:
    needs: [manage-infrastructure]
    runs-on: ubuntu-20.04
    steps:
    <%#runtimeMaven%>
      - name: Build a Java function using Maven
        uses: microsoft/nubesgen-actions/gitops-build-function-java-maven@v0.4.0
    <%/runtimeMaven%>
    <%#runtimeGradle%>
      - name: Build a Java function using Gradle
        uses: microsoft/nubesgen-actions/gitops-build-function-java-gradle@v0.4.0
    <%/runtimeGradle%>
  deploy:
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy a Java function to Azure Functions
        uses: microsoft/nubesgen-actions/gitops-deploy-to-function-java@v0.4.0
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
  <%/applicationTypeFunction%>
  <%#applicationTypeSpringCloud%>
  build:
    runs-on: ubuntu-20.04
    steps:
    <%#runtimeMaven%>
      - name: Build a Java project using Maven
        uses: microsoft/nubesgen-actions/gitops-build-java-maven@v0.4.0
    <%/runtimeMaven%>
    <%#runtimeGradle%>
      - name: Build a Java project using Gradle
        uses: microsoft/nubesgen-actions/gitops-build-java-gradle@v0.4.0
    <%/runtimeGradle%>
  deploy:
    needs: [manage-infrastructure, build]
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy a Java application to Azure Spring Cloud
        uses: microsoft/nubesgen-actions/gitops-deploy-to-spring-cloud-java@v0.4.0
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
  <%/applicationTypeSpringCloud%>
<%/runtimeJava%>
<%#runtimeDotnet%>
  build:
    runs-on: ubuntu-20.04
    steps:
  <%#applicationTypeAppService%>
      - name: Build a .NET application
        uses: microsoft/nubesgen-actions/gitops-build-dotnet@v0.4.0
        with:
          dotnet_version: ${{ env.DOTNET_VERSION }}
          application_package_path: ${{ env.APP_PACKAGE_PATH }}
  <%/applicationTypeAppService%>
  <%#applicationTypeFunction%>
      - name: Build a .NET serverless function
        uses: microsoft/nubesgen-actions/gitops-build-function-dotnet@v0.4.0
        with:
          dotnet_version: ${{ env.DOTNET_VERSION }}
          application_package_path: ${{ env.APP_PACKAGE_PATH }}
  <%/applicationTypeFunction%>
  deploy:
    needs: [manage-infrastructure, build]
    runs-on: ubuntu-20.04
    steps:
  <%#applicationTypeAppService%>
      - name: Deploy a .NET application to Azure App Service
        uses: microsoft/nubesgen-actions/gitops-deploy-to-app-service-dotnet@v0.4.0
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
  <%/applicationTypeAppService%>
  <%#applicationTypeFunction%>
      - name: Deploy a .NET function to Azure Functions
        uses: microsoft/nubesgen-actions/gitops-deploy-to-function-dotnet@v0.4.0
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
  <%/applicationTypeFunction%>
<%/runtimeDotnet%>
<%#runtimeNodejs%>
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Build a NodeJS project
        uses: microsoft/nubesgen-actions/gitops-build-nodejs@v0.4.0
        with:
          nodejs_version: ${{ env.NODEJS_VERSION }}
          application_package_path: ${{ env.APP_PACKAGE_PATH }}
  deploy:
    needs: [manage-infrastructure, build]
    runs-on: ubuntu-20.04
    steps:
  <%#applicationTypeAppService%>
      - name: Deploy a NodeJS application to Azure App Service
        uses: microsoft/nubesgen-actions/gitops-deploy-to-app-service-nodejs@v0.4.0
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
  <%/applicationTypeAppService%>
  <%#applicationTypeFunction%>
      - name: Deploy a NodeJS application to Azure App Service
        uses: microsoft/nubesgen-actions/gitops-deploy-to-function-nodejs@v0.4.0
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
  <%/applicationTypeFunction%>
<%/runtimeNodejs%>
